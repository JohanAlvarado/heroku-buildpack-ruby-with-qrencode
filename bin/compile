#!/usr/bin/env ruby

# sync output
$stdout.sync = true

$:.unshift File.expand_path("../../lib", __FILE__)
require "language_pack"
require "language_pack/shell_helpers"

echo "-----> Building qrencode"

#apt-get install -y libqrencode-dev
mkdir -p $HOME/qr
BUILD_DIR=$HOME/qr
mkdir -p $1/.profile.d

cat <<EOF >$BUILD_DIR/.profile.d/qrencoder.sh
export PATH="$BUILD_DIR/bin:$PATH"
export LD_LIBRARY_PATH="$BUILD_DIR/lib:$LD_LIBRARY_PATH"
export INCLUDE_PATH="$BUILD_DIR/include:$INCLUDE_PATH"
export CPATH="$INCLUDE_PATH"
export CPPPATH="$INCLUDE_PATH"
EOF

export PATH="$BUILD_DIR/bin:$PATH"
export LD_LIBRARY_PATH="$BUILD_DIR/lib:$LD_LIBRARY_PATH"
export INCLUDE_PATH="$BUILD_DIR/include:$INCLUDE_PATH"
export CPATH="$INCLUDE_PATH"
export CPPPATH="$INCLUDE_PATH"

curl http://fukuchi.org/works/qrencode/qrencode-3.2.0.tar.gz | tar xz
cd qrencode-3.2.0; ./configure --prefix=$HOME/qr --enable-static --disable-shared; make; make install
cd $1
#export PATH=\"\$HOME/qr:$HOME/bin:/.bin:\$PATH\"


LanguagePack::Instrument.trace 'compile', 'app.compile' do
  if pack = LanguagePack.detect(ARGV[0], ARGV[1])
    LanguagePack::ShellHelpers.initialize_env(ARGV[2])
    pack.topic("Compiling #{pack.name}")
    pack.log("compile") do
      pack.compile
    end
  end
end
